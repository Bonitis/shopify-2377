{
  "schemaVersion": "3",
  "created": "2017-07-13T19:16:10.801Z",
  "workflows": {},
  "services": {
    "shopify:seans-store-takeshape": {
      "params": {
        "type": "graphql",
        "namespace": "Shopify",
        "authHeader": "X-Shopify-Access-Token",
        "endpoint": "https://seans-store-takeshape.myshopify.com/admin/api/2020-07/graphql.json",
        "shop": "seans-store-takeshape"
      },
      "auth": "0ilz5lgnCs0DYq/xqjzEGUBI4tvSpOYYeno2eD9IRMg9HEej4knsr4CyxS8vhpKZOb3DUlozlZJfXab0hpBPQYHXMtx6vfKn4M73AtZa6WF/RqUT8epppeG1sTEAGK4vr7G/URIiFIwB9p+jdFe+Z7E="
    }
  },
  "version": 2,
  "queries": {
    "getProduct": {
      "resolver": {
        "name": "graphql:query",
        "service": "shopify:seans-store-takeshape",
        "fieldName": "product"
      },
      "args": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "@tag": "id"
          }
        },
        "required": [
          "id"
        ]
      },
      "shape": "Shopify_Product"
    },
    "getPost": {
      "shape": "Post",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Get a Post by ID",
      "args": "TSGetArgs<Post>"
    },
    "getPostList": {
      "shape": "PaginatedList<Post>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Returns a list Post in natural order.",
      "args": "TSListArgs<Post>"
    },
    "getTag": {
      "shape": "Tag",
      "resolver": {
        "name": "takeshape:get",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Get a Tag by ID",
      "args": "TSGetArgs<Tag>"
    },
    "getTagList": {
      "shape": "PaginatedList<Tag>",
      "resolver": {
        "name": "takeshape:list",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Returns a list Tag in natural order.",
      "args": "TSListArgs<Tag>"
    },
    "getProductList": {
      "args": {
        "type": "object",
        "properties": {
          "first": {
            "type": "integer",
            "description": "Returns up to the first `n` elements from the list."
          },
          "after": {
            "type": "string",
            "description": "Returns the elements that come after the specified cursor."
          },
          "last": {
            "type": "integer",
            "description": "Returns up to the last `n` elements from the list."
          },
          "before": {
            "type": "string",
            "description": "Returns the elements that come before the specified cursor."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse the order of the underlying list."
          },
          "sortKey": {
            "description": "Sort the underlying list by the given key.",
            "enum": [
              "TITLE",
              "PRODUCT_TYPE",
              "VENDOR",
              "INVENTORY_TOTAL",
              "UPDATED_AT",
              "CREATED_AT",
              "PUBLISHED_AT",
              "ID",
              "RELEVANCE"
            ]
          },
          "query": {
            "type": "string",
            "description": "Supported filter parameters:\n - `barcode`\n - `created_at`\n - `delivery_profile_id`\n - `error_feedback`\n - `gift_card`\n - `inventory_total`\n - `is_price_reduced`\n - `out_of_stock_somewhere`\n - `price`\n - `product_type`\n - `publishable_status`\n - `published_status`\n - `sku`\n - `status`\n - `tag`\n - `title`\n - `updated_at`\n - `vendor`\n\nSee the detailed [search syntax](https://help.shopify.com/api/getting-started/search-syntax)\nfor more information about using filters."
          },
          "savedSearchId": {
            "type": "string",
            "@tag": "id",
            "description": "ID of an existing saved search.\nThe searchâ€™s query string is used as the query argument."
          }
        }
      },
      "resolver": {
        "name": "graphql:query",
        "service": "shopify:seans-store-takeshape",
        "fieldName": "products"
      },
      "shape": "Shopify_ProductConnection"
    }
  },
  "dataKey": "AQIDAHhcZWXOdlBglkxBhI23ElO/clC/kuw5ynjXDSqJgfTz8gFvrYhMK581OOYYSjJNwit9AAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMPLnOWQxVHD5AzgXdAgEQgDu0ANKQTBQ7dNFJEQcd2aOfZncgw7DjUasC+7Yp2ci0Y2+ZmbbtIa2kcHBt8eriFPR28uwgnvDzn8t6Qw==",
  "defaultLocale": "en",
  "locales": [
    "en"
  ],
  "apiVersion": "2",
  "mutations": {
    "updatePost": {
      "shape": "UpdateResult<Post>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Update Post",
      "args": "UpdateArgs<Post>"
    },
    "createPost": {
      "shape": "CreateResult<Post>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Create Post",
      "args": "CreateArgs<Post>"
    },
    "duplicatePost": {
      "shape": "DuplicateResult<Post>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Duplicate Post",
      "args": "DuplicateArgs<Post>"
    },
    "deletePost": {
      "shape": "DeleteResult<Post>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "options": {
          "model": "Post"
        }
      },
      "description": "Delete Post",
      "args": "DeleteArgs<Post>"
    },
    "updateTag": {
      "shape": "UpdateResult<Tag>",
      "resolver": {
        "name": "takeshape:update",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Update Tag",
      "args": "UpdateArgs<Tag>"
    },
    "createTag": {
      "shape": "CreateResult<Tag>",
      "resolver": {
        "name": "takeshape:create",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Create Tag",
      "args": "CreateArgs<Tag>"
    },
    "duplicateTag": {
      "shape": "DuplicateResult<Tag>",
      "resolver": {
        "name": "takeshape:duplicate",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Duplicate Tag",
      "args": "DuplicateArgs<Tag>"
    },
    "deleteTag": {
      "shape": "DeleteResult<Tag>",
      "resolver": {
        "name": "takeshape:delete",
        "service": "takeshape:local",
        "options": {
          "model": "Tag"
        }
      },
      "description": "Delete Tag",
      "args": "DeleteArgs<Tag>"
    },
    "createProduct": {
      "resolver": {
        "name": "graphql:mutation",
        "service": "shopify:seans-store-takeshape",
        "fieldName": "productCreate"
      },
      "args": {
        "type": "object",
        "properties": {
          "input": {
            "$ref": "#/shapes/Shopify_ProductInput/schema"
          }
        },
        "required": [
          "input"
        ]
      },
      "shape": "Shopify_ProductCreatePayload"
    }
  },
  "shapes": {
    "Post": {
      "name": "Post",
      "schema": {
        "type": "object",
        "properties": {
          "shopifyProduct": {
            "$ref": "#/shapes/Shopify_Product/schema",
            "@resolver": {
              "name": "graphql:query",
              "argsMapping": {
                "id": [["jsonPath", {"path": "$.productId"}]]
              },
              "service": "shopify:seans-store-takeshape",
              "fieldName": "product"
            }
          },
          "rating": {
            "type": "integer",
            "@mapping": "takeshape:local:Post.ratingId"
          },
          "productId": {
            "type": "string",
            "@tag": "id",
            "@mapping": "takeshape:local:Post.productId"
          },
          "title": {
            "type": "string",
            "@l10n": true,
            "@mapping": "takeshape:local:Post.titleId"
          },
          "body": {
            "type": "string",
            "@l10n": true,
            "@mapping": "takeshape:local:Post.bodyId"
          },
          "tags": {
            "@mapping": "takeshape:local:Post.tagsId",
            "type": "array",
            "items": {
              "$ref": "#/shapes/TSRelationship/schema"
            },
            "@relationship": {
              "type": "multiple",
              "shapeIds": [
                "tagContentTypeId"
              ],
              "relatedName": "firstTags"
            }
          }
        },
        "required": [
          "title"
        ]
      },
      "model": {
        "type": "multiple"
      },
      "id": "postContentTypeId",
      "title": "Post"
    },
    "Tag": {
      "name": "Tag",
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "@mapping": "takeshape:local:Tag.nameId"
          }
        },
        "required": [
          "name"
        ]
      },
      "model": {
        "type": "taxonomy"
      },
      "id": "tagContentTypeId",
      "title": "Tag"
    }
  },
  "projectId": "2dfe9bff-a0be-4309-ab53-acbe60bdb44b",
  "updated": "2018-09-08T20:16:45.814Z",
  "forms": {
    "Post": {
      "default": {
        "order": [
          "title",
          "body",
          "rating",
          "tags"
        ]
      }
    },
    "Tag": {
      "default": {
        "order": [
          "name"
        ]
      }
    }
  }
}
